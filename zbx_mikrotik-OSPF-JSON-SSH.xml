<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.0</version>
    <date>2019-05-09T21:31:56Z</date>
    <groups>
        <group>
            <name>Templates</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Mikrotik - OSPF LLD</template>
            <name>Mikrotik - OSPF LLD</name>
            <description/>
            <groups>
                <group>
                    <name>Templates</name>
                </group>
            </groups>
            <applications>
                <application>
                    <name>OSPF</name>
                </application>
                <application>
                    <name>OSPF JSONs</name>
                </application>
            </applications>
            <items>
                <item>
                    <name>OSPF - Neighbor JSON</name>
                    <type>13</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>ssh.run[OSPF - Neighbor JSON,,{$MIKROTIK_SSH_PORT},]</key>
                    <delay>{$UPDATEINT}</delay>
                    <history>1d</history>
                    <trends>0</trends>
                    <status>0</status>
                    <value_type>4</value_type>
                    <allowed_hosts/>
                    <units/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params>:global list [/routing ospf neighbor find]; :global count 0; :global total [:len $list]; :put &quot;{&quot;;   :foreach i in=$list do={ :local router [/routing ospf neighbor get value-name=router-id number=$i];  :local address [/routing  ospf neighbor get value-name=address number=$i]; :local statechanges [/routing  ospf neighbor get value-name=state-changes number=$i]; :local interface [/routing ospf neighbor get value-name=interface number=$i];  :local state [/routing ospf neighbor get value-name=state number=$i];  :if ( $count &lt; $total-1) do={; :put &quot;\&quot;$count\&quot;:{\&quot;ID\&quot;:\&quot;$i\&quot;,\&quot;STATECHANGES\&quot;:\&quot;$statechanges\&quot;,\&quot;ROUTERID\&quot;:\&quot;$router\&quot;,\&quot;ADDRESS\&quot;:\&quot;$address\&quot;,\&quot;INTERFACE\&quot;:\&quot;$interface\&quot;,\&quot;STATEOSPF\&quot;:\&quot;$state\&quot;},&quot;;} else={; :put &quot;\&quot;$count\&quot;:{\&quot;ID\&quot;:\&quot;$i\&quot;,\&quot;STATECHANGES\&quot;:\&quot;$statechanges\&quot;,\&quot;ROUTERID\&quot;:\&quot;$router\&quot;,\&quot;ADDRESS\&quot;:\&quot;$address\&quot;,\&quot;INTERFACE\&quot;:\&quot;$interface\&quot;,\&quot;STATEOSPF\&quot;:\&quot;$state\&quot;}&quot;;};   :set count ($count + 1); }; :put &quot;}&quot;;</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username>{$MIKROTIK_SSH_USER}</username>
                    <password>{$MIKROTIK_SSH_PASS}</password>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <description/>
                    <inventory_link>0</inventory_link>
                    <applications>
                        <application>
                            <name>OSPF JSONs</name>
                        </application>
                    </applications>
                    <valuemap/>
                    <logtimefmt/>
                    <preprocessing/>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <output_format>0</output_format>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                    <master_item/>
                </item>
            </items>
            <discovery_rules>
                <discovery_rule>
                    <name>OSPF - Neighbor</name>
                    <type>13</type>
                    <snmp_community/>
                    <snmp_oid/>
                    <key>ssh.run[OSPF - Neighbor,,{$MIKROTIK_SSH_PORT},]</key>
                    <delay>1h</delay>
                    <status>0</status>
                    <allowed_hosts/>
                    <snmpv3_contextname/>
                    <snmpv3_securityname/>
                    <snmpv3_securitylevel>0</snmpv3_securitylevel>
                    <snmpv3_authprotocol>0</snmpv3_authprotocol>
                    <snmpv3_authpassphrase/>
                    <snmpv3_privprotocol>0</snmpv3_privprotocol>
                    <snmpv3_privpassphrase/>
                    <params>:global list [/routing ospf neighbor find]; :global count 0; :global total [:len $list]; :put &quot;{\&quot;data\&quot;:[&quot;;   :foreach i in=$list do={ :local router [/routing ospf neighbor get value-name=router-id number=$i];  :local address [/routing  ospf neighbor get value-name=address number=$i]; :local statechanges [/routing  ospf neighbor get value-name=state-changes number=$i]; :local interface [/routing ospf neighbor get value-name=interface number=$i];  :local state [/routing ospf neighbor get value-name=state number=$i];  :if ( $count &lt; $total-1) do={; :put &quot;{\&quot;{#NUMBER}\&quot;:\&quot;$count\&quot;,\&quot;{#ID}\&quot;:\&quot;$i\&quot;,\&quot;{#STATECHANGES}\&quot;:\&quot;$statechanges\&quot;,\&quot;{#ROUTERID}\&quot;:\&quot;$router\&quot;,\&quot;{#ADDRESS}\&quot;:\&quot;$address\&quot;,\&quot;{#INTERFACE}\&quot;:\&quot;$interface\&quot;,\&quot;{#STATE}\&quot;:\&quot;$state\&quot;},&quot;;} else={; :put &quot;{\&quot;{#NUMBER}\&quot;:\&quot;$count\&quot;,\&quot;{#ID}\&quot;:\&quot;$i\&quot;,\&quot;{#STATECHANGES}\&quot;:\&quot;$statechanges\&quot;,\&quot;{#ROUTERID}\&quot;:\&quot;$router\&quot;,\&quot;{#ADDRESS}\&quot;:\&quot;$address\&quot;,\&quot;{#INTERFACE}\&quot;:\&quot;$interface\&quot;,\&quot;{#STATE}\&quot;:\&quot;$state\&quot;}&quot;;};   :set count ($count + 1); }; :put &quot;]}&quot;;</params>
                    <ipmi_sensor/>
                    <authtype>0</authtype>
                    <username>{$MIKROTIK_SSH_USER}</username>
                    <password>{$MIKROTIK_SSH_PASS}</password>
                    <publickey/>
                    <privatekey/>
                    <port/>
                    <filter>
                        <evaltype>0</evaltype>
                        <formula/>
                        <conditions/>
                    </filter>
                    <lifetime>30d</lifetime>
                    <description/>
                    <item_prototypes>
                        <item_prototype>
                            <name>{#NUMBER}-{#ROUTERID}-{#ADDRESS}-{#INTERFACE}-state</name>
                            <type>18</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>state.[{#NUMBER},{#ROUTERID},{#ADDRESS},{#INTERFACE}]</key>
                            <delay>0</delay>
                            <history>{$HISTORY}</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>OSPF</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing>
                                <step>
                                    <type>12</type>
                                    <params>$.{#NUMBER}.STATEOSPF</params>
                                </step>
                            </preprocessing>
                            <jmx_endpoint/>
                            <timeout>3s</timeout>
                            <url/>
                            <query_fields/>
                            <posts/>
                            <status_codes>200</status_codes>
                            <follow_redirects>1</follow_redirects>
                            <post_type>0</post_type>
                            <http_proxy/>
                            <headers/>
                            <retrieve_mode>0</retrieve_mode>
                            <request_method>0</request_method>
                            <output_format>0</output_format>
                            <allow_traps>0</allow_traps>
                            <ssl_cert_file/>
                            <ssl_key_file/>
                            <ssl_key_password/>
                            <verify_peer>0</verify_peer>
                            <verify_host>0</verify_host>
                            <application_prototypes/>
                            <master_item>
                                <key>ssh.run[OSPF - Neighbor JSON,,{$MIKROTIK_SSH_PORT},]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>{#NUMBER}-{#ROUTERID}-{#ADDRESS}-{#INTERFACE}-statechange</name>
                            <type>18</type>
                            <snmp_community/>
                            <snmp_oid/>
                            <key>statechange.[{#NUMBER},{#ROUTERID},{#ADDRESS},{#INTERFACE}]</key>
                            <delay>0</delay>
                            <history>{$HISTORY}</history>
                            <trends>0</trends>
                            <status>0</status>
                            <value_type>4</value_type>
                            <allowed_hosts/>
                            <units/>
                            <snmpv3_contextname/>
                            <snmpv3_securityname/>
                            <snmpv3_securitylevel>0</snmpv3_securitylevel>
                            <snmpv3_authprotocol>0</snmpv3_authprotocol>
                            <snmpv3_authpassphrase/>
                            <snmpv3_privprotocol>0</snmpv3_privprotocol>
                            <snmpv3_privpassphrase/>
                            <params/>
                            <ipmi_sensor/>
                            <authtype>0</authtype>
                            <username/>
                            <password/>
                            <publickey/>
                            <privatekey/>
                            <port/>
                            <description/>
                            <inventory_link>0</inventory_link>
                            <applications>
                                <application>
                                    <name>OSPF</name>
                                </application>
                            </applications>
                            <valuemap/>
                            <logtimefmt/>
                            <preprocessing>
                                <step>
                                    <type>12</type>
                                    <params>$.{#NUMBER}.STATECHANGES</params>
                                </step>
                            </preprocessing>
                            <jmx_endpoint/>
                            <timeout>3s</timeout>
                            <url/>
                            <query_fields/>
                            <posts/>
                            <status_codes>200</status_codes>
                            <follow_redirects>1</follow_redirects>
                            <post_type>0</post_type>
                            <http_proxy/>
                            <headers/>
                            <retrieve_mode>0</retrieve_mode>
                            <request_method>0</request_method>
                            <output_format>0</output_format>
                            <allow_traps>0</allow_traps>
                            <ssl_cert_file/>
                            <ssl_key_file/>
                            <ssl_key_password/>
                            <verify_peer>0</verify_peer>
                            <verify_host>0</verify_host>
                            <application_prototypes/>
                            <master_item>
                                <key>ssh.run[OSPF - Neighbor JSON,,{$MIKROTIK_SSH_PORT},]</key>
                            </master_item>
                        </item_prototype>
                    </item_prototypes>
                    <trigger_prototypes>
                        <trigger_prototype>
                            <expression>{Mikrotik - OSPF LLD:state.[{#NUMBER},{#ROUTERID},{#ADDRESS},{#INTERFACE}].str(Full)}=0</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>OSPF Neighbor ({#NUMBER}-{#ROUTERID}-{#ADDRESS}-{#INTERFACE}) is not FULL</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <manual_close>0</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                        <trigger_prototype>
                            <expression>{Mikrotik - OSPF LLD:statechange.[{#NUMBER},{#ROUTERID},{#ADDRESS},{#INTERFACE}].change()}&gt;10</expression>
                            <recovery_mode>0</recovery_mode>
                            <recovery_expression/>
                            <name>OSPF Neighbor ({#NUMBER}-{#ROUTERID}-{#ADDRESS}-{#INTERFACE}) state change  is to high</name>
                            <correlation_mode>0</correlation_mode>
                            <correlation_tag/>
                            <url/>
                            <status>0</status>
                            <priority>5</priority>
                            <description/>
                            <type>0</type>
                            <manual_close>0</manual_close>
                            <dependencies/>
                            <tags/>
                        </trigger_prototype>
                    </trigger_prototypes>
                    <graph_prototypes/>
                    <host_prototypes/>
                    <jmx_endpoint/>
                    <timeout>3s</timeout>
                    <url/>
                    <query_fields/>
                    <posts/>
                    <status_codes>200</status_codes>
                    <follow_redirects>1</follow_redirects>
                    <post_type>0</post_type>
                    <http_proxy/>
                    <headers/>
                    <retrieve_mode>0</retrieve_mode>
                    <request_method>0</request_method>
                    <allow_traps>0</allow_traps>
                    <ssl_cert_file/>
                    <ssl_key_file/>
                    <ssl_key_password/>
                    <verify_peer>0</verify_peer>
                    <verify_host>0</verify_host>
                </discovery_rule>
            </discovery_rules>
            <httptests/>
            <macros>
                <macro>
                    <macro>{$MIKROTIK_SSH_PASS}</macro>
                    <value>11111</value>
                </macro>
                <macro>
                    <macro>{$MIKROTIK_SSH_PORT}</macro>
                    <value>22</value>
                </macro>
                <macro>
                    <macro>{$MIKROTIK_SSH_USER}</macro>
                    <value>mikmon</value>
                </macro>
            </macros>
            <templates/>
            <screens/>
        </template>
    </templates>
</zabbix_export>
